// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Music.Models;

#nullable disable

namespace Music.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20240418142848_initMusicDb")]
    partial class initMusicDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Music.Models.AlbumDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlbumDbs");
                });

            modelBuilder.Entity("Music.Models.ArtistDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ArtistDbs");
                });

            modelBuilder.Entity("Music.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumDbId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistDbId")
                        .HasColumnType("int");

                    b.Property<string>("Cover_medium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumDbId");

                    b.HasIndex("ArtistDbId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Music.Models.Track", b =>
                {
                    b.HasOne("Music.Models.AlbumDb", "AlbumDb")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Music.Models.ArtistDb", "ArtistDb")
                        .WithMany("Tracks")
                        .HasForeignKey("ArtistDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumDb");

                    b.Navigation("ArtistDb");
                });

            modelBuilder.Entity("Music.Models.AlbumDb", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Music.Models.ArtistDb", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
